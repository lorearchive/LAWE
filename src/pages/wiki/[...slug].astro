---
// get the pre processed data from props
const { page } = Astro.props


import { fetchWikiContent, getAllPages } from '../../utils/git-service'
import { processAllPages } from '../../utils/pages-processor'
import Shell from '../../layouts/Shell.astro'
import RenderTOC from '../../components/RenderTOC.astro'
import Icon from '../../components/Icon.astro'

export async function getStaticPaths() {
    const contentPath = await fetchWikiContent()
    const rawPages = await getAllPages(contentPath)
    const { processedPages } = await processAllPages(rawPages)
  
    const routes = processedPages.map(page => { 
    
        const slugString = page.slug.join('/')
    
        return {
            params: { slug: slugString },
            props: { page }
        }
  })
  
  return routes  
}

const h1Match = page.htmlContent.match(/<h1[^>]*>.*?<\/h1>/i)
const h1match = h1Match ? h1Match[0] : ''
const bodyContent = h1Match ? page.htmlContent.replace(h1Match[0], '') : page.htmlContent

const lastModifiedDate = page.metadata.lastModified.toLocaleString('en-GB', {
    day: '2-digit',
    month: 'short',
    year: 'numeric',
    hour: '2-digit',
    minute: '2-digit',
    hour12: false,
    timeZone: 'UTC',
}) + ' UTC'


const pageURL = `https://github.com/lorearchive/law-content/tree/main/wiki/${page.slug.join("/")}.txt`
const pageEditURL = `https://github.com/lorearchive/law-content/edit/main/wiki/${page.slug.join("/")}.txt`
---

<Shell title={`${ page.title } - Lore Archive`}>
    <header id="pageTitle" set:html={ h1match } />

    <div id="page-toolbar" class="mt-3 p-2 border-t border-b border-black mb-7 items-center flex flex-row justify-between">
        <div id="lastModified">
            <span class="flex flex-row items-center">
                <a href={pageURL} >Last Modified: { lastModifiedDate }</a>
            </span>
        </div>

        <div id="page-toolbar-actions">
            <span>
                <a href={pageEditURL}>Edit this page</a>
            </span>
        </div>
    </div>

    <article id="bodyContent" set:html={ bodyContent }></article>

    <div slot="TOCbar">
        <RenderTOC TOC={ page.toc }/>
    </div>
</Shell>